{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-amlunar"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Cdc')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SqlServerOnPremise-Csv",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DateCondition-SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.Cdc"
							},
							{
								"name": "Destination",
								"value": "raw//DepartmentA.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"additionalColumns": [
									{
										"name": "EtlName",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									{
										"name": "EtlDateTime",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": {
									"value": "@concat('select * from dbo.DepartmentA where PaymentDate = ','''',substring(string(activity('DateCondition-SQL').output.firstRow),5,10),'''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"metadata": [
										{
											"name": "EtlName",
											"value": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											}
										},
										{
											"name": "EtlDateTime",
											"value": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											}
										}
									]
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerDepartmentA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DepartmentAcsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SqlServerCloud-Parquet",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DateCondition-SQLCloud",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.DepartmentB"
							},
							{
								"name": "Destination",
								"value": "raw//DepartmentB.parquet"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "EtlName",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									{
										"name": "EtlDateTime",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": {
									"value": "@concat('select * from dbo.DepartmentB where PaymentDate = ','''',substring(string(activity('DateCondition-SQLCloud').output.firstRow),5,10),'''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"metadata": [
										{
											"name": "EtlName",
											"value": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											}
										},
										{
											"name": "EtlDateTime",
											"value": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											}
										}
									]
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlDepartmentB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DepartmentBparquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Preprocessing-Raw-Sql-Cloud",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "SqlServerCloud-Parquet",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/alexluna@proactiviti.com/CDC-Azure/Version2/Preprocessing-Raw-Sql-Cloud"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Preprocessing-Raw-Sql-OnPremise",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "SqlServerOnPremise-Csv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/alexluna@proactiviti.com/CDC-Azure/Version2/Preprocessing-Raw-Sql-OnPremise"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DateCondition-SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select convert(varchar(10),max(PaymentDate)) from dbo.DepartmentA ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerDepartmentA",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "DateCondition-SQLCloud",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select convert(varchar(10),max(PaymentDate)) from dbo.DepartmentB",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlDepartmentB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "UpdateCDC-Curated_copy1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Preprocessing-Raw-Sql-OnPremise",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Preprocessing-Raw-Sql-Cloud",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/alexluna@proactiviti.com/CDC-Azure/Version2/UpdateCDC-Curated"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"valorx": {
						"type": "String"
					},
					"EtlName": {
						"type": "String"
					},
					"EtlDateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CDC"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-19T17:39:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cdc_Watermark')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SqlServerOnPremise-Csv",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WatermarkA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.Cdc"
							},
							{
								"name": "Destination",
								"value": "raw//DepartmentA.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"additionalColumns": [
									{
										"name": "EtlName",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									{
										"name": "EtlDateTime",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": {
									"value": "@concat('select * from dbo.DepartmentA where PaymentDate > ','''',\nactivity('WatermarkA').output['runOutput']['adf_Output_value']\n,'''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"metadata": [
										{
											"name": "EtlName",
											"value": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											}
										},
										{
											"name": "EtlDateTime",
											"value": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											}
										}
									]
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerDepartmentA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DepartmentAcsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SqlServerCloud-Parquet",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WatermarkB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.DepartmentB"
							},
							{
								"name": "Destination",
								"value": "raw//DepartmentB.parquet"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "EtlName",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									{
										"name": "EtlDateTime",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": {
									"value": "@concat('select * from dbo.DepartmentB where PaymentDate > ','''',\nactivity('WatermarkB').output['runOutput']['adf_Output_value']\n,'''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"metadata": [
										{
											"name": "EtlName",
											"value": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											}
										},
										{
											"name": "EtlDateTime",
											"value": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											}
										}
									]
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlDepartmentB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DepartmentBparquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Preprocessing-Raw-Sql-Cloud",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "SqlServerCloud-Parquet",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/alexluna@proactiviti.com/CDC-Azure/Version2/Preprocessing-Raw-Sql-Cloud_version2"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Preprocessing-Raw-Sql-OnPremise",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "SqlServerOnPremise-Csv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/alexluna@proactiviti.com/CDC-Azure/Version2/Preprocessing-Raw-Sql-OnPremise_version2"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UpdateCDC-Curated",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Preprocessing-Raw-Sql-OnPremise",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Preprocessing-Raw-Sql-Cloud",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/alexluna@proactiviti.com/CDC-Azure/Version2/UpdateCDC-Curated"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "WatermarkA",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/alexluna@proactiviti.com/CDC-Azure/Version2/WatermarkA"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "WatermarkB",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/alexluna@proactiviti.com/CDC-Azure/Version2/WatermarkB"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"valorx": {
						"type": "String"
					},
					"EtlName": {
						"type": "String"
					},
					"EtlDateTime": {
						"type": "String"
					},
					"output": {
						"type": "String"
					},
					"OutputTestA": {
						"type": "String"
					},
					"OutputTestB": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CDC"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-19T17:39:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cdc_Watermark_test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SqlServerOnPremise-Csv",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.Cdc"
							},
							{
								"name": "Destination",
								"value": "raw//DepartmentA.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"additionalColumns": [
									{
										"name": "EtlName",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									{
										"name": "EtlDateTime",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": "select * from [dbo].[DepartmentA]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"metadata": [
										{
											"name": "EtlName",
											"value": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											}
										},
										{
											"name": "EtlDateTime",
											"value": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											}
										}
									]
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerDepartmentA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DepartmentAcsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SqlServerCloud-Parquet",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.DepartmentB"
							},
							{
								"name": "Destination",
								"value": "raw//DepartmentB.parquet"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "EtlName",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									{
										"name": "EtlDateTime",
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": "select * from dbo.DepartmentB",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"metadata": [
										{
											"name": "EtlName",
											"value": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											}
										},
										{
											"name": "EtlDateTime",
											"value": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											}
										}
									]
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlDepartmentB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DepartmentBparquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Preprocessing-Raw-Sql-Cloud",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "SqlServerCloud-Parquet",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/alexluna@proactiviti.com/CDC-Azure/Version2/Preprocessing-Raw-Sql-Cloud_version2"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Preprocessing-Raw-Sql-OnPremise",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "SqlServerOnPremise-Csv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/alexluna@proactiviti.com/CDC-Azure/Version2/Preprocessing-Raw-Sql-OnPremise_version2"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UpdateCDC-Curated",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Preprocessing-Raw-Sql-OnPremise",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Preprocessing-Raw-Sql-Cloud",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/alexluna@proactiviti.com/CDC-Azure/Version2/UpdateCDC-Curated"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"valorx": {
						"type": "String"
					},
					"EtlName": {
						"type": "String"
					},
					"EtlDateTime": {
						"type": "String"
					},
					"output": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CDC"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-19T21:34:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Initialize')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "InitializeSQL_OnPremise",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[dbo].[Initialize]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerDepartmentA",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "InitializeSQL_Cloud",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[Initialize]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlDepartmentB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "InitializeTables",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "InitializeSQL_OnPremise",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "InitializeSQL_Cloud",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/alexluna@proactiviti.com/CDC-Azure/Version2/Initialize"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"OutputTestA": {
						"type": "String"
					},
					"OutputTestB": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CDC"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-19T17:39:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Simulate_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Test_SQLOnPremise",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@variables('Test')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerDepartmentA",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Test_SQLCloud",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": {
									"value": "@variables('Test')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlDepartmentB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Test": {
						"type": "String",
						"defaultValue": "dbo.Test_3"
					}
				},
				"folder": {
					"name": "CDC"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-24T15:31:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Simulate_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Test_SQLOnPremise",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@variables('Test')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerDepartmentA",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Test_SQLCloud",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": {
									"value": "@variables('Test')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlDepartmentB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Test": {
						"type": "String",
						"defaultValue": "dbo.Test_2"
					}
				},
				"folder": {
					"name": "CDC"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-19T21:17:18Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestDelete')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TestDelete",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "LoadSourceToValidate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/alexluna@proactiviti.com/CDC-Azure/Version2/TestDelete",
							"baseParameters": {
								"adf_IdUpdate": {
									"value": "@pipeline().parameters.IdDelete",
									"type": "Expression"
								},
								"adf_source": {
									"value": "@pipeline().parameters.Source",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ValidateDelete",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "TestDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ValidateInsert",
							"value": {
								"value": "@activity('TestDelete').output['runOutput']['adf_output']",
								"type": "Expression"
							}
						}
					},
					{
						"name": "LoadSourceToValidate",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.Source,'DepartmentA')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ValidateSourceB",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select convert(varchar(32),HashBytes(''MD5'', concat(id,LastName,FirstName,Income,Department)),2) as ColHash from dbo.DepartmentB where Id in (',pipeline().parameters.IdDelete,')')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "AzureSqlDepartmentB",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ValidateRows",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "ValidateSourceA",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@concat('select convert(varchar(32),HashBytes(''MD5'', concat(id,LastName,FirstName,Income,Department)),2) as ColHash from dbo.DepartmentA where Id in (',pipeline().parameters.IdDelete,')')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerDepartmentA",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ValidateRows",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"IdDelete": {
						"type": "string",
						"defaultValue": "22,903"
					},
					"Source": {
						"type": "string",
						"defaultValue": "DepartmentA"
					}
				},
				"variables": {
					"ValidateInsert": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CDC/Test"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-31T18:24:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestInsert')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TestInsert",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "LoadSourceToValidate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/alexluna@proactiviti.com/CDC-Azure/Version2/TestInsert",
							"baseParameters": {
								"adf_IdUpdate": {
									"value": "@pipeline().parameters.IdInsert",
									"type": "Expression"
								},
								"adf_source": {
									"value": "@pipeline().parameters.Source",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ValidateInsert",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "TestInsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ValidateInsert",
							"value": {
								"value": "@activity('TestInsert').output['runOutput']['adf_output']",
								"type": "Expression"
							}
						}
					},
					{
						"name": "LoadSourceToValidate",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.Source,'DepartmentA')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ValidateSourceB",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select convert(varchar(32),HashBytes(''MD5'', concat(id,LastName,FirstName,Income,Department)),2) as ColHash from dbo.DepartmentB where Id in (',pipeline().parameters.IdInsert,')')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "AzureSqlDepartmentB",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ValidateRows",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "ValidateSourceA",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@concat('select convert(varchar(32),HashBytes(''MD5'', concat(id,LastName,FirstName,Income,Department)),2) as ColHash from dbo.DepartmentA where Id in (',pipeline().parameters.IdInsert,')')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerDepartmentA",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ValidateRows",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"IdInsert": {
						"type": "string",
						"defaultValue": "1001,1002"
					},
					"Source": {
						"type": "string",
						"defaultValue": "DepartmentA"
					}
				},
				"variables": {
					"ValidateInsert": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CDC/Test"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-31T18:24:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestUpdate')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TestUpdate",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "LoadSourceToValidate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/alexluna@proactiviti.com/CDC-Azure/Version2/TestUpdate",
							"baseParameters": {
								"adf_IdUpdate": {
									"value": "@pipeline().parameters.IdUpdate",
									"type": "Expression"
								},
								"adf_source": {
									"value": "@pipeline().parameters.Source",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ValidateUpdate",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "TestUpdate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ValidateUpdate",
							"value": {
								"value": "@activity('TestUpdate').output['runOutput']['adf_output']",
								"type": "Expression"
							}
						}
					},
					{
						"name": "LoadSourceToValidate",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.Source,'DepartmentA')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "ValidateSourceB",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select convert(varchar(32),HashBytes(''MD5'', concat(id,LastName,FirstName,Income,Department)),2) as ColHash from dbo.DepartmentB where Id in (',pipeline().parameters.IdUpdate,')')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "AzureSqlDepartmentB",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ValidateRows",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "ValidateSourceA",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@concat('select convert(varchar(32),HashBytes(''MD5'', concat(id,LastName,FirstName,Income,Department)),2) as ColHash from dbo.DepartmentA where Id in (',pipeline().parameters.IdUpdate,')')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerDepartmentA",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ValidateRows",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"IdUpdate": {
						"type": "string",
						"defaultValue": "797,749"
					},
					"Source": {
						"type": "string",
						"defaultValue": "DepartmentA"
					}
				},
				"variables": {
					"ValidateUpdate": {
						"type": "String"
					},
					"IdList": {
						"type": "String"
					},
					"OutputF": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CDC/Test"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-31T18:24:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Testing_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CountDepartmentA_SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select count(1) as Count from dbo.DepartmentA \n--where PaymentDate = (select max(PaymentDate ) as Count from dbo.DepartmentA)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerDepartmentA",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CountDeparmentB_SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(1) as Count from dbo.DepartmentB \n--where PaymentDate = (select max(PaymentDate ) as Count from dbo.DepartmentB)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlDepartmentB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "TestA",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "CountDepartmentA_SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/alexluna@proactiviti.com/CDC-Azure/Version2/TestA",
							"baseParameters": {
								"adf_CountA": {
									"value": "@string(activity('CountDepartmentA_SQL').output.firstRow)",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ValidationA",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "TestA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "OutputTestA",
							"value": {
								"value": "@activity('TestA').output['runOutput']['adf_output_value']",
								"type": "Expression"
							}
						}
					},
					{
						"name": "TestB",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "CountDeparmentB_SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/alexluna@proactiviti.com/CDC-Azure/Version2/TestB",
							"baseParameters": {
								"adf_CountB": {
									"value": "@string(activity('CountDeparmentB_SQL').output.firstRow)",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ValidationB",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "TestB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "OutputTestB",
							"value": {
								"value": "@activity('TestB').output['runOutput']['adf_output_value']",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"OutputTestA": {
						"type": "String"
					},
					"OutputTestB": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CDC"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-19T21:53:37Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Testing_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CountDepartmentA_SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select count(1) as Count from dbo.DepartmentA \nwhere PaymentDate = (select max(PaymentDate ) as Count from dbo.DepartmentA)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerDepartmentA",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CountDeparmentB_SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(1) as Count from dbo.DepartmentB where PaymentDate = (select max(PaymentDate ) as Count from dbo.DepartmentB)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlDepartmentB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "TestA",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "CountDepartmentA_SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/alexluna@proactiviti.com/CDC-Azure/Version2/TestA",
							"baseParameters": {
								"adf_CountA": {
									"value": "@string(activity('CountDepartmentA_SQL').output.firstRow)",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ValidationA",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "TestA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "OutputTestA",
							"value": {
								"value": "@activity('TestA').output['runOutput']['adf_output_value']",
								"type": "Expression"
							}
						}
					},
					{
						"name": "TestB",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "CountDeparmentB_SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/alexluna@proactiviti.com/CDC-Azure/Version2/TestB",
							"baseParameters": {
								"adf_CountB": {
									"value": "@string(activity('CountDeparmentB_SQL').output.firstRow)",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ValidationB",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "TestB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "OutputTestB",
							"value": {
								"value": "@activity('TestB').output['runOutput']['adf_output_value']",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"OutputTestA": {
						"type": "String"
					},
					"OutputTestB": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CDC"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-19T21:53:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Main_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Validate Initialize",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(equals(pipeline().parameters.Initialize,'Yes'),lessOrEquals(int(variables('Counter')), 3))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Simulate_1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Simulate_1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Initialize",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Initialize",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					},
					{
						"name": "Testing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Cdc_Watermark_test",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Testing_1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Cdc_Watermark_test",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Validate Initialize",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Cdc_Watermark_test",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Validate Initialize",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 120
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Initialize": {
						"type": "string",
						"defaultValue": "Yes"
					}
				},
				"variables": {
					"OutputTestA": {
						"type": "String"
					},
					"OutputTestB": {
						"type": "String"
					},
					"Counter": {
						"type": "String",
						"defaultValue": "0"
					},
					"TempCounter": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "CDC"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-31T21:54:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Testing_1')]",
				"[concat(variables('factoryId'), '/pipelines/Cdc_Watermark_test')]",
				"[concat(variables('factoryId'), '/pipelines/Simulate_1')]",
				"[concat(variables('factoryId'), '/pipelines/Initialize')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Main_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Validate Initialize",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.Initialize,'Yes')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Simulate_2",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Simulate_2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Initialize",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Initialize",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					},
					{
						"name": "Cdc_Watermark",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Validate Initialize",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Cdc_Watermark",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Testing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Cdc_Watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Testing_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Initialize": {
						"type": "string",
						"defaultValue": "Yes"
					}
				},
				"variables": {
					"OutputTestA": {
						"type": "String"
					},
					"OutputTestB": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CDC"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-19T21:53:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Cdc_Watermark')]",
				"[concat(variables('factoryId'), '/pipelines/Testing_2')]",
				"[concat(variables('factoryId'), '/pipelines/Simulate_2')]",
				"[concat(variables('factoryId'), '/pipelines/Initialize')]"
			]
		}
	]
}